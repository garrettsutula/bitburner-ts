import { NS } from '@ns'
import { calculateWeaken, calculateGrow, calculateHack,
  calculateHackDelay, calculateWeakenDelay, calculateGrowDelay, 
  calculateStepsDuration, calculateStepsRamNeeded,  } from '/lib/stages/calculate'
import { Procedure } from '/models/procedure';
import { scriptPaths } from '/config';

export function exploitSchedule(ns: NS, host: string): Procedure {
  const hack = calculateHack(ns, 1, host, scriptPaths.hackOnce);
  const firstWeaken = calculateWeaken(ns, 2, host, scriptPaths.weakenOnce, hack.securityLevelIncrease);
  const grow = calculateGrow(ns, 3, host, scriptPaths.growOnce);
  const secondWeaken = calculateWeaken(ns, 4, host, scriptPaths.weakenOnce, grow.securityLevelIncrease);

  hack.delay = calculateHackDelay(ns, host);
  firstWeaken.delay = calculateWeakenDelay(ns, host, firstWeaken.ordinal);
  grow.delay = calculateGrowDelay(ns, host);
  secondWeaken.delay = calculateWeakenDelay(ns, host, secondWeaken.ordinal);

  const steps = [ hack, firstWeaken, grow, secondWeaken, ];

  return {
    type: 'exploit',
    steps,
    totalDuration: calculateStepsDuration(steps),
    totalRamNeeded: calculateStepsRamNeeded(steps),
  };
}
